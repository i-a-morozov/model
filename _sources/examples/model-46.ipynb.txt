{
 "cells": [
  {
   "attachments": {},
   "cell_type": "markdown",
   "id": "262a5ec8-2553-4237-ab62-319b6ca22089",
   "metadata": {},
   "source": [
    "# Example-47: Optimize (Multistart)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "47c46731-4450-4bcf-8708-369a71baa0e7",
   "metadata": {},
   "outputs": [],
   "source": [
    "# In this example optics correction is performed using different initial conditions for quadrupole settings"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "e6dfc013-e69e-427e-99d6-602c9eecbcba",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Import\n",
    "\n",
    "import torch\n",
    "from torch import Tensor\n",
    "from torch.utils.data import TensorDataset\n",
    "from torch.utils.data import DataLoader\n",
    "\n",
    "from pathlib import Path\n",
    "\n",
    "import matplotlib\n",
    "from matplotlib import pyplot as plt\n",
    "matplotlib.rcParams['text.usetex'] = True\n",
    "\n",
    "from model.library.line import Line\n",
    "\n",
    "from model.command.util import select\n",
    "\n",
    "from model.command.external import load_sdds\n",
    "from model.command.external import load_lattice\n",
    "\n",
    "from model.command.build import build\n",
    "\n",
    "from model.command.wrapper import group\n",
    "from model.command.wrapper import forward\n",
    "from model.command.wrapper import inverse\n",
    "from model.command.wrapper import normalize\n",
    "from model.command.wrapper import Wrapper\n",
    "\n",
    "from model.command.tune import tune\n",
    "from model.command.twiss import twiss\n",
    "\n",
    "from model.command.optimize import adam\n",
    "from model.command.optimize import newton"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "fb0fe584-f17e-40a0-8ea1-266c2d563394",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Load ELEGANT twiss\n",
    "\n",
    "path = Path('ic.twiss')\n",
    "parameters, columns = load_sdds(path)\n",
    "\n",
    "nu_qx:Tensor = torch.tensor(parameters['nux'] % 1, dtype=torch.float64)\n",
    "nu_qy:Tensor = torch.tensor(parameters['nuy'] % 1, dtype=torch.float64)\n",
    "\n",
    "# Set twiss parameters at BPMs\n",
    "\n",
    "kinds = select(columns, 'ElementType', keep=False)\n",
    "\n",
    "a_qx = select(columns, 'alphax', keep=False)\n",
    "b_qx = select(columns, 'betax' , keep=False)\n",
    "a_qy = select(columns, 'alphay', keep=False)\n",
    "b_qy = select(columns, 'betay' , keep=False)\n",
    "\n",
    "a_qx:Tensor = torch.tensor([value for (key, value), kind in zip(a_qx.items(), kinds.values()) if kind == 'MONI'], dtype=torch.float64)\n",
    "b_qx:Tensor = torch.tensor([value for (key, value), kind in zip(b_qx.items(), kinds.values()) if kind == 'MONI'], dtype=torch.float64)\n",
    "a_qy:Tensor = torch.tensor([value for (key, value), kind in zip(a_qy.items(), kinds.values()) if kind == 'MONI'], dtype=torch.float64)\n",
    "b_qy:Tensor = torch.tensor([value for (key, value), kind in zip(b_qy.items(), kinds.values()) if kind == 'MONI'], dtype=torch.float64)\n",
    "\n",
    "positions = select(columns, 's', keep=False).items()\n",
    "positions = [value for (key, value), kind in zip(positions, kinds.values()) if kind == 'MONI']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "d323c9d0-b35d-4a5d-8e45-5d7b731ad093",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Build and setup lattice\n",
    "\n",
    "# Load ELEGANT table\n",
    "\n",
    "path = Path('ic.lte')\n",
    "data = load_lattice(path)\n",
    "\n",
    "# Build ELEGANT table\n",
    "\n",
    "ring:Line = build('RING', 'ELEGANT', data)\n",
    "ring.flatten()\n",
    "\n",
    "# Merge drifts\n",
    "\n",
    "ring.merge()\n",
    "\n",
    "# Split BPMs\n",
    "\n",
    "ring.split((None, ['BPM'], None, None))\n",
    "\n",
    "# Roll lattice start\n",
    "\n",
    "ring.roll(1)\n",
    "\n",
    "# Set linear dipoles\n",
    "\n",
    "for element in ring:\n",
    "    if element.__class__.__name__ == 'Dipole':\n",
    "        element.linear = True\n",
    "\n",
    "# Split lattice into lines by BPMs\n",
    "\n",
    "ring.splice()\n",
    "\n",
    "# Set number of elements of different kinds\n",
    "\n",
    "nb = ring.describe['BPM']\n",
    "nq = ring.describe['Quadrupole']\n",
    "ns = ring.describe['Sextupole']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "f49b3093-d2dc-4991-96ec-bb9527720dc9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True\n",
      "True\n"
     ]
    }
   ],
   "source": [
    "# Compare tunes\n",
    "\n",
    "nuqx, nuqy = tune(ring, [], alignment=False, matched=True)\n",
    "\n",
    "print(torch.allclose(nu_qx, nuqx))\n",
    "print(torch.allclose(nu_qy, nuqy))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "de96df0c-9210-403b-bfe1-79e9fd7e07e0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True\n",
      "True\n",
      "True\n",
      "True\n"
     ]
    }
   ],
   "source": [
    "# Compare twiss\n",
    "\n",
    "aqx, bqx, aqy, bqy = twiss(ring, [], alignment=False, matched=True, advance=True, full=False, convert=True).T\n",
    "\n",
    "print(torch.allclose(a_qx, aqx))\n",
    "print(torch.allclose(b_qx, bqx))\n",
    "print(torch.allclose(a_qy, aqy))\n",
    "print(torch.allclose(b_qy, bqy))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "33914481-a4bd-4374-9592-8da58ac820ac",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1600x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Set lattice with focusing errors (no coupling)\n",
    "\n",
    "error:Line = ring.clone()\n",
    "\n",
    "nq = error.describe['Quadrupole']\n",
    "\n",
    "error_kn = 0.1*torch.randn(nq, dtype=torch.float64)\n",
    "\n",
    "index = 0\n",
    "label = ''\n",
    "\n",
    "for line in error.sequence:\n",
    "    for element in line:\n",
    "        if element.__class__.__name__ == 'Quadrupole':\n",
    "            if label != element.name:\n",
    "                index +=1\n",
    "            label = element.name\n",
    "            element.kn = (element.kn + error_kn[index - 1]).item()\n",
    "\n",
    "\n",
    "fig, ax = plt.subplots(1, 1, figsize=(16, 4))\n",
    "ax.hist(error_kn.cpu().numpy(), bins=8,  range=(-0.5, 0.5), color='blue', alpha=0.7)\n",
    "plt.tight_layout() \n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "248934d7-ef50-46eb-a9ff-05366f2f3c32",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "tensor(1.5845, dtype=torch.float64)\n",
      "tensor(0.9961, dtype=torch.float64)\n",
      "tensor(0.6124, dtype=torch.float64)\n",
      "tensor(0.3541, dtype=torch.float64)\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1600x200 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Compute twiss and plot beta beating\n",
    "\n",
    "ax_model, bx_model, ay_model, by_model = twiss(ring, [], alignment=False, matched=True, advance=True, full=False, convert=True).T\n",
    "ax_error, bx_error, ay_error, by_error = twiss(error, [], alignment=False, matched=True, advance=True, full=False, convert=True).T\n",
    "\n",
    "# Compare twiss\n",
    "\n",
    "print((ax_model - ax_error).norm())\n",
    "print((bx_model - bx_error).norm())\n",
    "print((ay_model - ay_error).norm())\n",
    "print((by_model - by_error).norm())\n",
    "print()\n",
    "\n",
    "# Plot beta beating\n",
    "\n",
    "plt.figure(figsize=(16, 2))\n",
    "plt.plot(ring.locations().cpu().numpy(), 100*((bx_model - bx_error)/bx_model).cpu().numpy(), color='red', alpha=0.75, marker='o')\n",
    "plt.plot(ring.locations().cpu().numpy(), 100*((by_model - by_error)/by_model).cpu().numpy(), color='blue', alpha=0.75, marker='o')\n",
    "plt.xticks(ticks=positions, labels=['BPM05', 'BPM07', 'BPM08', 'BPM09', 'BPM10', 'BPM11', 'BPM12', 'BPM13', 'BPM14', 'BPM15', 'BPM16', 'BPM17', 'BPM01', 'BPM02', 'BPM03', 'BPM04'])\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "b8350fa1-a7c8-47c6-a6d4-eca335e0c3ed",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Batch objective\n",
    "\n",
    "# Set target twiss parameters\n",
    "\n",
    "twiss_error = twiss(error, [], alignment=False, matched=True, advance=True, full=False, convert=True)\n",
    "\n",
    "# Define rings (Twiss parameters will be computed at each ring start)\n",
    "\n",
    "rings:list[Line] = []\n",
    "\n",
    "for i, _ in enumerate(ring):\n",
    "    line = ring.clone()\n",
    "    line.roll(i)\n",
    "    rings.append(line)\n",
    "\n",
    "# Set batched function\n",
    "\n",
    "_, ((_, names, _), *_), _ = group(ring, 0, len(ring) - 1, ('kn', ['Quadrupole'], None, None))\n",
    "\n",
    "def evaluate(X, knobs):\n",
    "    kn = knobs\n",
    "    result = []\n",
    "    for x in X:\n",
    "        result.append(twiss(rings[x], [kn], ('kn', None, names, None), alignment=False, matched=True, convert=True))\n",
    "    return torch.stack(result)\n",
    "\n",
    "# Normalize objective\n",
    "\n",
    "evaluate = normalize(evaluate, [(None, None), (-0.25, 0.25)])\n",
    "\n",
    "# Set loss funtion\n",
    "\n",
    "lf = torch.nn.MSELoss()\n",
    "\n",
    "# Set features and labels \n",
    "\n",
    "X = torch.arange(len(ring))\n",
    "y = twiss_error.clone()\n",
    "\n",
    "# Set dataset\n",
    "\n",
    "batch_size = 8\n",
    "dataset = TensorDataset(X.clone(), y.clone())\n",
    "dataloader = DataLoader(dataset, batch_size=batch_size, shuffle=False)\n",
    "\n",
    "# Set batch objective\n",
    "\n",
    "def objective(knobs, X, y):\n",
    "    return lf(evaluate(X, knobs), y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "e2a4967e-0f18-4b9d-b857-a38aeeac5424",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 1600x200 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "tensor(2.0008, dtype=torch.float64)\n",
      "tensor(0.0355, dtype=torch.float64)\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1600x200 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Optimization with adam optimizer (single initial)\n",
    "\n",
    "# Set initial knob valurs\n",
    "\n",
    "kn = torch.zeros_like(error_kn)\n",
    "\n",
    "# Normalize\n",
    "\n",
    "kn, *_ = forward([kn], [(-0.25, 0.25)])\n",
    "\n",
    "# Perform optimization\n",
    "\n",
    "kn = adam(objective, kn, dataloader, count=64, lr=0.005)\n",
    "\n",
    "# Transform normalized result\n",
    "\n",
    "kn_out, *_ = inverse([kn], [(-0.25, 0.25)])\n",
    "\n",
    "# Plot quadrupole settings\n",
    "\n",
    "plt.figure(figsize=(16, 2))\n",
    "plt.bar(range(len(error_kn)), error_kn.cpu().numpy(), color='red', alpha=0.75, width=1)\n",
    "plt.bar(range(len(kn_out)), +kn_out.cpu().numpy(), color='blue', alpha=0.75, width=0.75)\n",
    "plt.tight_layout()\n",
    "plt.show()\n",
    "\n",
    "# Compare twiss\n",
    "\n",
    "print((twiss_error - twiss(ring, [0.0*kn_out], ('kn', ['Quadrupole'], None, None), alignment=False, matched=True, advance=True, full=False, convert=True)).norm())\n",
    "print((twiss_error - twiss(ring, [1.0*kn_out], ('kn', ['Quadrupole'], None, None), alignment=False, matched=True, advance=True, full=False, convert=True)).norm())\n",
    "\n",
    "# Plot beta beating\n",
    "\n",
    "plt.figure(figsize=(16, 2))\n",
    "\n",
    "_, bx_model, _, by_model = twiss(ring, [0.0*kn_out], ('kn', ['Quadrupole'], None, None), alignment=False, matched=True, advance=True, full=False, convert=True).T\n",
    "plt.plot(ring.locations().cpu().numpy(), 100*((bx_model - bx_error)/bx_model).cpu().numpy(), color='red', alpha=0.75, marker='o')\n",
    "plt.plot(ring.locations().cpu().numpy(), 100*((by_model - by_error)/by_model).cpu().numpy(), color='blue', alpha=0.75, marker='o')\n",
    "\n",
    "_, bx_model, _, by_model = twiss(ring, [1.0*kn_out], ('kn', ['Quadrupole'], None, None), alignment=False, matched=True, advance=True, full=False, convert=True).T\n",
    "plt.plot(ring.locations().cpu().numpy(), 100*((bx_model - bx_error)/bx_model).cpu().numpy(), color='red', alpha=0.75, marker='x')\n",
    "plt.plot(ring.locations().cpu().numpy(), 100*((by_model - by_error)/by_model).cpu().numpy(), color='blue', alpha=0.75, marker='x')\n",
    "\n",
    "plt.xticks(ticks=positions, labels=['BPM05', 'BPM07', 'BPM08', 'BPM09', 'BPM10', 'BPM11', 'BPM12', 'BPM13', 'BPM14', 'BPM15', 'BPM16', 'BPM17', 'BPM01', 'BPM02', 'BPM03', 'BPM04'])\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "21397cad-2366-4cc4-b36f-e0d703652d01",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 1600x200 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "tensor(0.0355, dtype=torch.float64)\n",
      "tensor(6.5866e-09, dtype=torch.float64)\n"
     ]
    }
   ],
   "source": [
    "# To improve accuracy of a selected soolution, several Newton optimization steps can be performed\n",
    "\n",
    "kn = newton(objective, kn, dataloader, count=4, lr=1.0)\n",
    "kn, *_ = inverse([kn], [(-0.25, 0.25)])\n",
    "\n",
    "# Plot quadrupole settings\n",
    "\n",
    "plt.figure(figsize=(16, 2))\n",
    "plt.bar(range(len(error_kn)), error_kn.cpu().numpy(), color='red', alpha=0.75, width=1)\n",
    "plt.bar(range(len(kn)), +kn.cpu().numpy(), color='blue', alpha=0.75, width=0.75)\n",
    "plt.tight_layout()\n",
    "plt.show()\n",
    "\n",
    "# Compare twiss\n",
    "\n",
    "print((twiss_error - twiss(ring, [kn_out], ('kn', ['Quadrupole'], None, None), alignment=False, matched=True, advance=True, full=False, convert=True)).norm())\n",
    "print((twiss_error - twiss(ring, [kn], ('kn', ['Quadrupole'], None, None), alignment=False, matched=True, advance=True, full=False, convert=True)).norm())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "c45da173-2e24-48b2-9208-68b8febf71c8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "torch.Size([1024, 28])\n"
     ]
    }
   ],
   "source": [
    "# Optimization (multiple initials)\n",
    "# Note, newton optimizer is also vmappable over initials\n",
    "\n",
    "kns = torch.rand((1024, nq), dtype=torch.float64)\n",
    "kns = torch.vmap(lambda kn: adam(objective, kn, dataloader, count=64, lr=0.005), randomness='same', chunk_size=1024)(kns)\n",
    "print(kns.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "15a84163-fe40-42b5-8566-65c3299a97ab",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 1600x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plot final errors within selected range\n",
    "\n",
    "def error(kn):\n",
    "    return (twiss_error - twiss(ring, [*inverse([kn], [(-0.25, 0.25)])], ('kn', ['Quadrupole'], None, None), alignment=False, matched=True, advance=True, full=False, convert=True)).norm()\n",
    "\n",
    "values = torch.vmap(error)(kns)\n",
    "\n",
    "fig, ax = plt.subplots(1, 1, figsize=(16, 4))\n",
    "ax.hist(values.cpu().numpy(), bins=50, color='blue', alpha=0.7)\n",
    "plt.tight_layout() \n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "colab": {
   "collapsed_sections": [
    "myt0_gMIOq7b",
    "5d97819c"
   ],
   "name": "03_frequency.ipynb",
   "provenance": []
  },
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.1"
  },
  "latex_envs": {
   "LaTeX_envs_menu_present": true,
   "autoclose": false,
   "autocomplete": true,
   "bibliofile": "biblio.bib",
   "cite_by": "apalike",
   "current_citInitial": 1,
   "eqLabelWithNumbers": true,
   "eqNumInitial": 1,
   "hotkeys": {
    "equation": "Ctrl-E",
    "itemize": "Ctrl-I"
   },
   "labels_anchors": false,
   "latex_user_defs": false,
   "report_style_numbering": false,
   "user_envs_cfg": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
